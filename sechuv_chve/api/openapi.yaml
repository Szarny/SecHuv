openapi: 3.0.1
info:
  title: SecHuv
  description: Security Hub for Human-vulnerabilities.
  contact:
    email: tsubasa.umeuchi@gmail.com
  version: 1.0.0
servers:
  - url: /
tags:
  - name: general
    description: システム全体に関するエンドポイント
  - name: web
    description: Webの事例に関するエンドポイント
  - name: mail
    description: メールの事例に関するエンドポイント
  - name: other
    description: その他の事例に関するエンドポイント
  - name: vuln
    description: 人的脆弱性に関するエンドポイント
paths:
  /:
    get:
      tags:
        - general
      summary: 全ての事例を取得
      parameters:
        - name: length
          in: query
          description: 取得する件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  web:
                    type: array
                    items:
                      $ref: '#/components/schemas/WebCase'
                  mail:
                    type: array
                    items:
                      $ref: '#/components/schemas/MailCase'
                  other:
                    type: array
                    items:
                      $ref: '#/components/schemas/OtherCase'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /case:
    get:
      tags:
        - general
      summary: 指定した事例を取得
      parameters:
        - name: uuid
          in: query
          description: 取得する事例のUUID
          required: true
          schema:
            type: string
            format: uuid
        - name: kind
          in: query
          description: 取得する事例のメディア
          required: true
          schema:
            type: string
        - name: is_valid
          in: query
          description: 正当な事例であるかどうか
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
        '400':
          description: Parameter error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      tags:
        - general
      summary: 指定した事例を削除
      parameters:
        - name: uuid
          in: query
          description: 削除する事例のUUID
          required: true
          schema:
            type: string
            format: uuid
        - name: kind
          in: query
          description: 取得する事例のメディア
          required: true
          schema:
            type: string
        - name: is_valid
          in: query
          description: 正当な事例であるかどうか
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
        '400':
          description: Parameter error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /web/case:
    get:
      tags:
        - web
      summary: Webに関する事例を取得
      parameters:
        - name: length
          in: query
          description: 取得する件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebCase'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    post:
      tags:
        - web
      summary: Webに関する事例を投稿
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebCasePost'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  post_date:
                    type: string
                    format: yyyymmddhhmmss
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /web/valid:
    get:
      tags:
        - web
      summary: Webに関する正当なコンテンツを取得
      parameters:
        - name: length
          in: query
          description: 取得する件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebValidCase'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    post:
      tags:
        - web
      summary: Webに関する正当なコンテンツを取得
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebSpec'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  post_date:
                    type: string
                    format: yyyymmddhhmmss
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /web/check:
    post:
      tags:
        - web
      summary: Webコンテンツの危険度をチェック
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebPostSpec'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    vulntype:
                      type: string
                    message:
                      type: string
                  
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /mail/case:
    get:
      tags:
        - mail
      summary: メールに関する事例を取得
      parameters:
        - name: length
          in: query
          description: 取得する件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailCase'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    post:
      tags:
        - mail
      summary: メールに関する事例を投稿
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailCasePost'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  post_date:
                    type: string
                    format: yyyymmddhhmmss
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /mail/valid:
    get:
      tags:
        - mail
      summary: メールに関する正当なコンテンツを取得
      parameters:
        - name: length
          in: query
          description: 取得する件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailValidCase'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    post:
      tags:
        - mail
      summary: メールに関する正当なコンテンツを投稿
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailSpec'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  post_date:
                    type: string
                    format: yyyymmddhhmmss
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /mail/check:
    post:
      tags:
        - mail
      summary: メールコンテンツの危険度をチェック
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailPostSpec'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    vulntype:
                      type: string
                    message:
                      type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /other/case:
    get:
      tags:
        - other
      summary: その他の事例を取得
      parameters:
        - name: length
          in: query
          description: 取得する件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OtherCase'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    post:
      tags:
        - other
      summary: その他の事例を投稿
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtherCasePost'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  post_date:
                    type: string
                    format: yyyymmddhhmmss
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /other/valid:
    get:
      tags:
        - other
      summary: その他の正当なコンテンツを取得
      parameters:
        - name: length
          in: query
          description: 取得する件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OtherValidCase'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    post:
      tags:
        - other
      summary: その他の正当なコンテンツを投稿
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtherSpec'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  post_date:
                    type: string
                    format: yyyymmddhhmmss
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /other/check:
    post:
      tags:
        - other
      summary: その他のコンテンツの危険度をチェック
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtherPostSpec'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    vulntype:
                      type: string
                    message:
                      type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /vuln:
    get:
      tags:
        - vuln
      summary: 人的脆弱性の一覧を取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vulnerability'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    post:
      tags:
        - vuln
      summary: 人的脆弱性のタイプを追加
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vulnerability'
        required: true
      responses:
        '200':
          description: OK
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      tags:
        - vuln
      summary: 指定した人的脆弱性のタイプを削除
      parameters:
        - name: vulntype
          in: query
          description: 削除する人的脆弱性のタイプ
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  vulntype:
                    type: string
        '400':
          description: Parameter error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  '/vuln/{vulntype}':
    get:
      tags:
        - vuln
      summary: 指定した人的脆弱性を突いた事例を取得
      parameters:
        - in: path
          name: vulntype
          schema:
            type: string
          required: true
          description: 人的脆弱性のタイプ
        - name: length
          in: query
          description: 取得する件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  web:
                    type: array
                    items:
                      $ref: '#/components/schemas/WebCase'
                  mail:
                    type: array
                    items:
                      $ref: '#/components/schemas/MailCase'
                  other:
                    type: array
                    items:
                      $ref: '#/components/schemas/OtherCase'
        '400':
          description: Parameter error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  '/vuln/{vulntype}/web':
    get:
      tags:
        - vuln
      summary: 指定した人的脆弱性を突いたWebの事例を取得
      parameters:
        - in: path
          name: vulntype
          schema:
            type: string
          required: true
          description: 人的脆弱性のタイプ
        - name: length
          in: query
          description: 取得する件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  vulnerability:
                    $ref: '#/components/schemas/Vulnerability'
                  cases:
                    type: array
                    items:
                      $ref: '#/components/schemas/WebCase'
        '400':
          description: Parameter error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  '/vuln/{vulntype}/mail':
    get:
      tags:
        - vuln
      summary: 指定した人的脆弱性を突いたメールの事例を取得
      parameters:
        - in: path
          name: vulntype
          schema:
            type: string
          required: true
          description: 人的脆弱性のタイプ
        - name: length
          in: query
          description: 取得する件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  vulnerability:
                    $ref: '#/components/schemas/Vulnerability'
                  cases:
                    type: array
                    items:
                      $ref: '#/components/schemas/MailCase'
        '400':
          description: Parameter error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  '/vuln/{vulntype}/other':
    get:
      tags:
        - vuln
      summary: 指定した人的脆弱性を突いたその他の事例を取得
      parameters:
        - in: path
          name: vulntype
          schema:
            type: string
          required: true
          description: 人的脆弱性のタイプ
        - name: length
          in: query
          description: 取得する件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  vulnerability:
                    $ref: '#/components/schemas/Vulnerability'
                  cases:
                    type: array
                    items:
                      $ref: '#/components/schemas/OtherCase'
        '400':
          description: Parameter error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
components:
  schemas:
    Case:
      type: object
      oneOf:
        - $ref: '#/components/schemas/WebCase'
        - $ref: '#/components/schemas/MailCase'
        - $ref: '#/components/schemas/OtherCase'
    WebCase:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        post_date:
          type: string
          format: yyyymmddhhmmss
        vulntypes:
          type: array
          items:
            type: string
        spec:
          $ref: '#/components/schemas/WebSpec'
    WebCasePost:
      type: object
      properties:
        vulntypes:
          type: array
          items:
            type: string
        spec:
          $ref: '#/components/schemas/WebPostSpec'
    WebSpec:
      type: object
      properties:
        url:
          type: string
        body:
          type: string
        raw_body:
          type: string
        screenshot:
          type: string
        summary:
          type: string
    WebValidCase:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        post_date:
          type: string
          format: yyyymmddhhmmss
        spec:
          $ref: '#/components/schemas/WebSpec'
    WebPostSpec:
      type: object
      properties:
        url:
          type: string
    MailCase:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        post_date:
          type: string
          format: yyyymmddhhmmss
        vulntypes:
          type: array
          items:
            type: string
        spec:
          $ref: '#/components/schemas/MailSpec'
    MailCasePost:
      type: object
      properties:
        vulntypes:
          type: array
          items:
            type: string
        spec:
          $ref: '#/components/schemas/MailPostSpec'
    MailSpec:
      type: object
      properties:
        from_addr:
          type: string
        spf_status:
          type: string
          enum:
            - none
            - pass
            - fail
            - softfail
            - neutral
            - unknown
        dkim_status:
          type: string
          enum:
            - none
            - neutral
            - pass
            - policy
            - hardfail
            - temperror
            - permerror
            - unknown
        subject:
          type: string
        body:
          type: string
        summary:
          type: string
        webcase_ptrs:
          type: array
          items:
            type: string
            format: uuid
    MailValidCase:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        post_date:
          type: string
          format: yyyymmddhhmmss
        spec:
          $ref: '#/components/schemas/MailSpec'
    MailPostSpec:
      type: object
      properties:
        from_addr:
          type: string
        spf_status:
          type: string
          enum:
            - none
            - pass
            - fail
            - softfail
            - neutral
            - unknown
        dkim_status:
          type: string
          enum:
            - none
            - neutral
            - pass
            - policy
            - hardfail
            - temperror
            - permerror
            - unknown
        subject:
          type: string
        body:
          type: string
    OtherCase:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        post_date:
          type: string
          format: yyyymmddhhmmss
        vulntypes:
          type: array
          items:
            type: string
        spec:
          $ref: '#/components/schemas/OtherSpec'
    OtherCasePost:
      type: object
      properties:
        vulntypes:
          type: array
          items:
            type: string
        spec:
          $ref: '#/components/schemas/OtherPostSpec'
    OtherSpec:
      type: object
      properties:
        media:
          type: string
        metadata:
          type: string
        payload:
          type: string
        summary:
          type: string
    OtherPostSpec:
      type: object
      properties:
        media:
          type: string
        metadata:
          type: string
        payload:
          type: string
    OtherValidCase:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        post_date:
          type: string
          format: yyyymmddhhmmss
        spec:
          $ref: '#/components/schemas/OtherSpec'
    Vulnerability:
      type: object
      properties:
        vulntype:
          type: string
        vulnname:
          type: string
        description:
          type: string
